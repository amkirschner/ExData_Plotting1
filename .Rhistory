?par
library(datasets)
library(datasets)
data(Cars)
data(cars)
with(cars,plot(speed,dist))
summary(cars)
colors()
install.packages("swirl")
install.packages("ggplot2")
install.packages("dplyr")
library("BH", lib.loc="~/R/win-library/3.2")
library('swirl')
rm(list=ls())
install_from_swirl("Exploratory Data Analysis")
install.packages("RMySQL")
library(RMySQL)
ucscDb <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb);
head(result)
result
hg19 <- dbConnect(MySQL(),user="genome",db="hg19",host="genome-mysql.cse.ucsc.edu")
allTables<-dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19)
dbListFields(hg19,"affyU133Plus2")
dbGetQuery(hg19,"select count(*) from affyU133Plus2")
affyData<-dbReadTable(hg19,"affyU133Plus2")
warnings()
head(aaffyData)
head(affyData)
dbDisconnect(hg19)
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created=h5createFile("example.h5")
created
created=h5createGroup("example.h5","foo")
created=h5createGroup("example.h5","baa")
created=h5createGroup("example.h5","foo/baa")
h5ls("example.h5")
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "bc892de753dea4b7a96c",
secret = "1da4f293df904588fcd40ccb5ffd7f86405d9574")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
#content(req)
source('~/.active-rstudio-document')
install.packages("httpuv")
source('~/.active-rstudio-document')
exit
quit
library(httr)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "bc892de753dea4b7a96c",
secret = "1da4f293df904588fcd40ccb5ffd7f86405d9574")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
#gtoken <- config(token = github_token)
#req <- GET("https://api.github.com/rate_limit", gtoken)
#stop_for_status(req)
#content(req)
source('~/.active-rstudio-document')
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "bc892de753dea4b7a96c",
secret = "1da4f293df904588fcd40ccb5ffd7f86405d9574")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
#gtoken <- config(token = github_token)
#req <- GET("https://api.github.com/rate_limit", gtoken)
#stop_for_status(req)
#content(req)
?httr
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "bc892de753dea4b7a96c",
secret = "1da4f293df904588fcd40ccb5ffd7f86405d9574")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
#req <- GET("https://api.github.com/rate_limit", gtoken)
req <- GET("https://api.github.com/users/jtleek/repos/datasharing", gtoken)
stop_for_status(req)
content(req)
setwd("~/Coursera/Exploratory Data")
library(data.table)
library(lubridate)
library(dplyr)
temp<- fread("./exdata/household_power_consumption.txt", sep=";", header = TRUE,na.strings=c("?",""))
?fread
temp$Date<-dmy(temp$Date)
df<- temp[year(temp$Date)== 2007 & month(temp$Date)==2 & mday(temp$Date) <3,]
str(Df)
str(df)
str(temp)
<- read.table("./exdata/household_power_consumption.txt", header=TRUE, sep= ";", na.strings = c("?",""))
temp <- read.table("./exdata/household_power_consumption.txt", header=TRUE, sep= ";", na.strings = c("?",""))
str(temp)
temp2<- fread("./exdata/household_power_consumption.txt", sep=";", header = TRUE,na.strings=c("?",""))
str(temp2)
rm(temp2)
rm(df)
temp$Date<-dmy(temp$Date)
df<- temp[year(temp$Date)== 2007 & month(temp$Date)==2 & mday(temp$Date) <3,]
str(df)
df$datetime <- paste(df$Date,df$Time)
df$datetime <- strptime(df$datetime, format = "%Y-%m-%d %H:%M:%S")
str(df)
df$Time <- strptime(df$datetime, format = "%Y-%m-%d %H:%M:%S")
str(df)
head(df)
df<-df[,1:9]
head(df)
str(df)
df
source('~/Coursera/Exploratory Data/base.R')
View(df)
str(df)
?hist
head(df$Global_active_power)
hist(df$Global_active_power,col="red")
hist(df$Global_active_power,col="red",ylab="Global Active Power (kilowatts)")
hist(df$Global_active_power,col="red",xlab="Global Active Power (kilowatts)")
title(main="Global Active Power")
hist(df$Global_active_power,col="red",xlab="Global Active Power (kilowatts)")
title(main="Global Active Power")
?hist
hist(df$Global_active_power,col="red",xlab="Global Active Power (kilowatts)",main="Global Active Power")
?Devices
?pdf
?png
png(filename="plot1.png")
hist(df$Global_active_power,col="red",xlab="Global Active Power (kilowatts)",main="Global Active Power")
dev.off()
setwd("~/GitHub/ExData_Plotting1")
source('~/GitHub/ExData_Plotting1/plot1.R')
source('~/GitHub/ExData_Plotting1/plot1.R')
?lines
with(df,plot(Time,Global_active_power))
?lines
with(df,plot(Time,Global_active_power,type="1"))
?plot
?lowess
?plot
with(df,plot(Time,Global_active_power,type="l"))
with(df,plot(Time,Global_active_power,type="l",ylab="Global Active Power (kilowatts)",xlab=""))
png(filename="plot2.png")
with(df,plot(Time,Global_active_power,type="l",ylab="Global Active Power (kilowatts)",xlab=""))s
dev.off()
png(filename="plot2.png")
with(df,plot(Time,Global_active_power,type="l",ylab="Global Active Power (kilowatts)",xlab=""))
dev.off()
with(df,plot(Time,Sub_metering_1,type="l",ylab="Energy sub metering",xlab=""))
lines(df$Sub_metering_2,col="red")
?lty
>>lty
??lty
lines(df$Sub_metering_2,col="red",lty="3")
with(df,plot(Time,Sub_metering_1,type="l",ylab="Energy sub metering",xlab=""))
lines(df$Sub_metering_2,col="red",lty="1")
lines(df$Time,df$Sub_metering_2,col="red",lty="1")
?lines
lines(df$Sub_metering_2,col="red",lty="1",type="l")
lines(df$Sub_metering_2,col="red",type="l")
lines(df$Time,df$Sub_metering_2,col="red",type="l")
with(df,plot(Time,Sub_metering_1,type="l",ylab="Energy sub metering",xlab=""))
lines(df$Time,df$Sub_metering_2,col="red",type="l")
lines(df$Time,df$Sub_metering_3,col="blue",type="l")
?legend
legend("topright")
?lch
??lch
??pch
legend("topright",legend="Sub_metering_1")
legend("topright",legend="Sub_metering_1",type="l")
legend("topright",legend="Sub_metering_1",lty="1")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=c(1,1,1),col=c("black","red","blue"))
png(filename="plot3.png")
with(df,plot(Time,Sub_metering_1,type="l",ylab="Energy sub metering",xlab=""))
lines(df$Time,df$Sub_metering_2,col="red",type="l")
lines(df$Time,df$Sub_metering_3,col="blue",type="l")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=c(1,1,1),col=c("black","red","blue"))
dev.off()
par(mfrow=c(2,2))
with(df,plot(Time,Global_active_power,type="l",ylab="Global Active Power",xlab=""))
with(df,plot(Time,Volatage,type="l",xlab="datetime"))
with(df,plot(Time,Voltage,type="l",xlab="datetime"))
with(df,plot(Time,Sub_metering_1,type="l",ylab="Energy sub metering",xlab=""))
lines(df$Time,df$Sub_metering_2,col="red",type="l")
lines(df$Time,df$Sub_metering_3,col="blue",type="l")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=c(1,1,1),col=c("black","red","blue"))
?legend
legend(border="")
legend(bty="n")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=c(1,1,1),col=c("black","red","blue"),bty="n")
par(mfrow=c(2,2))
with(df,plot(Time,Global_active_power,type="l",ylab="Global Active Power",xlab=""))
with(df,plot(Time,Voltage,type="l",xlab="datetime"))
with(df,plot(Time,Sub_metering_1,type="l",ylab="Energy sub metering",xlab=""))
lines(df$Time,df$Sub_metering_2,col="red",type="l")
lines(df$Time,df$Sub_metering_3,col="blue",type="l")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=c(1,1,1),col=c("black","red","blue"),bty="n")
summary(df$Global_active_power)
?png
png(filename="plot2.png",width=480,height=480,units="px")
with(df,plot(Time,Global_active_power,type="l",ylab="Global Active Power (kilowatts)",xlab=""))
dev.off()
png(filename="plot1.png",width=480,height=480,units="px")
hist(df$Global_active_power,col="red",xlab="Global Active Power (kilowatts)",main="Global Active Power")
dev.off()
png(filename="plot3.png",width=480,height=480,units="px")
with(df,plot(Time,Sub_metering_1,type="l",ylab="Energy sub metering",xlab=""))
lines(df$Time,df$Sub_metering_2,col="red",type="l")
lines(df$Time,df$Sub_metering_3,col="blue",type="l")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=c(1,1,1),col=c("black","red","blue"))
dev.off()
?legend
png(filename="plot4.png",width=480,height=480,units="px")
par(mfrow=c(2,2))
with(df,plot(Time,Global_active_power,type="l",ylab="Global Active Power",xlab=""))
with(df,plot(Time,Voltage,type="l",xlab="datetime"))
with(df,plot(Time,Sub_metering_1,type="l",ylab="Energy sub metering",xlab=""))
lines(df$Time,df$Sub_metering_2,col="red",type="l")
lines(df$Time,df$Sub_metering_3,col="blue",type="l")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=c(1,1,1),col=c("black","red","blue"),bty="n")
dev.off()
par(mfrow=c(2,2))
with(df,plot(Time,Global_active_power,type="l",ylab="Global Active Power",xlab=""))
with(df,plot(Time,Voltage,type="l",xlab="datetime"))
with(df,plot(Time,Sub_metering_1,type="l",ylab="Energy sub metering",xlab=""))
lines(df$Time,df$Sub_metering_2,col="red",type="l")
lines(df$Time,df$Sub_metering_3,col="blue",type="l")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=c(1,1,1),col=c("black","red","blue"),bty="n")
with(df,plot(Time,Global_active_power,type="l",xlab="datetime",ylim=c(0,.5)))
par(mfrow=c(2,2))
with(df,plot(Time,Global_active_power,type="l",ylab="Global Active Power",xlab=""))
with(df,plot(Time,Voltage,type="l",xlab="datetime"))
with(df,plot(Time,Sub_metering_1,type="l",ylab="Energy sub metering",xlab=""))
lines(df$Time,df$Sub_metering_2,col="red",type="l")
lines(df$Time,df$Sub_metering_3,col="blue",type="l")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=c(1,1,1),col=c("black","red","blue"),bty="n")
with(df,plot(Time,Global_reactive_power,type="l",xlab="datetime"))
png(filename="plot4.png",width=480,height=480,units="px")
par(mfrow=c(2,2))
with(df,plot(Time,Global_active_power,type="l",ylab="Global Active Power",xlab=""))
with(df,plot(Time,Voltage,type="l",xlab="datetime"))
with(df,plot(Time,Sub_metering_1,type="l",ylab="Energy sub metering",xlab=""))
lines(df$Time,df$Sub_metering_2,col="red",type="l")
lines(df$Time,df$Sub_metering_3,col="blue",type="l")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=c(1,1,1),col=c("black","red","blue"),bty="n")
with(df,plot(Time,Global_reactive_power,type="l",xlab="datetime"))
dev.off()
